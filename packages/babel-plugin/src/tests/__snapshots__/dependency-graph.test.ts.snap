// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dependency graph fixture_dependency_graph 1`] = `
[
  "graph TD;
classDef blockSegment fill:#5352ed,stroke:#333,stroke-width:2px;
classDef rootChild stroke:#ff0000,stroke-width:2px;
classDef returnNetwork stroke:#2ecc71,stroke-width:2px;
classDef componentVariable fill:#2ecc71,stroke:#333,stroke-width:1px;
node1["<pre align="left">function Test(_props) {
  let a = _props.a;
  let b = _props.b;
  const _unwrapped = useState(0);
  const state = _unwrapped[0];
  const setState = _unwrapped[1];
  let x: number[] = [];
  const z: number[] = [];
  let y = state % 2 === 0 ? x : z;
  y.push(state);
  let _unwrapped2 = 10;
  const _unwrapped3 = [5, 6];
  let _unwrapped4 = _unwrapped3[0];
  let _unwrapped5 = _unwrapped3[1];
  for (let i = _unwrapped2, j = _unwrapped4, k = _unwrapped5; j &lt; i; j++) {
    y.push(i + j * b);
  }
  let _unwrapped6 = 10;
  for (let i = _unwrapped6; i &lt; 10; i++) {
    y.push(i);
  }
  const m = y;
  let _unwrapped7 = state;
  for (let i = _unwrapped7; i &lt; 10; i++) {
    m.push(i);
  }
  console.log(\\&quot;Hello world\\&quot;);
  const _unwrappedJsxEl = () =&gt; setState(p =&gt; p + 1);
  const _unwrappedJsxEl2 = &lt;button onClick={_unwrappedJsxEl}&gt;Click here&lt;/button&gt;;
  const _unwrappedJsxEl3 = JSON.stringify(y);
  const _unwrappedJsxEl4 = &lt;li&gt;{_unwrappedJsxEl3}&lt;/li&gt;;
  const _unwrappedJsxEl5 = JSON.stringify(x);
  const _unwrappedJsxEl6 = &lt;li&gt;{_unwrappedJsxEl5}&lt;/li&gt;;
  const _unwrappedJsxEl7 = JSON.stringify(z);
  const _unwrappedJsxEl8 = &lt;li&gt;{_unwrappedJsxEl7}&lt;/li&gt;;
  const _unwrappedJsxEl9 = &lt;ul&gt;
        {_unwrappedJsxEl4}
        {_unwrappedJsxEl6}
        {_unwrappedJsxEl8}
      &lt;/ul&gt;;
  const _unwrappedJsxEl10 = &lt;div&gt;
      {state} {a}{\\&quot; \\&quot;}
      {_unwrappedJsxEl2}
      {_unwrappedJsxEl9}
    &lt;/div&gt;;
  return _unwrappedJsxEl10;
}</pre>"]
subgraph SG1
node2["<pre align="left">_props</pre>"]
class node2 returnNetwork;
class node2 componentVariable;
class node2 rootChild
node3["<pre align="left">{
  let a = _props.a;
  let b = _props.b;
  const _unwrapped = useState(0);
  const state = _unwrapped[0];
  const setState = _unwrapped[1];
  let x: number[] = [];
  const z: number[] = [];
  let y = state % 2 === 0 ? x : z;
  y.push(state);
  let _unwrapped2 = 10;
  const _unwrapped3 = [5, 6];
  let _unwrapped4 = _unwrapped3[0];
  let _unwrapped5 = _unwrapped3[1];
  for (let i = _unwrapped2, j = _unwrapped4, k = _unwrapped5; j &lt; i; j++) {
    y.push(i + j * b);
  }
  let _unwrapped6 = 10;
  for (let i = _unwrapped6; i &lt; 10; i++) {
    y.push(i);
  }
  const m = y;
  let _unwrapped7 = state;
  for (let i = _unwrapped7; i &lt; 10; i++) {
    m.push(i);
  }
  console.log(\\&quot;Hello world\\&quot;);
  const _unwrappedJsxEl = () =&gt; setState(p =&gt; p + 1);
  const _unwrappedJsxEl2 = &lt;button onClick={_unwrappedJsxEl}&gt;Click here&lt;/button&gt;;
  const _unwrappedJsxEl3 = JSON.stringify(y);
  const _unwrappedJsxEl4 = &lt;li&gt;{_unwrappedJsxEl3}&lt;/li&gt;;
  const _unwrappedJsxEl5 = JSON.stringify(x);
  const _unwrappedJsxEl6 = &lt;li&gt;{_unwrappedJsxEl5}&lt;/li&gt;;
  const _unwrappedJsxEl7 = JSON.stringify(z);
  const _unwrappedJsxEl8 = &lt;li&gt;{_unwrappedJsxEl7}&lt;/li&gt;;
  const _unwrappedJsxEl9 = &lt;ul&gt;
        {_unwrappedJsxEl4}
        {_unwrappedJsxEl6}
        {_unwrappedJsxEl8}
      &lt;/ul&gt;;
  const _unwrappedJsxEl10 = &lt;div&gt;
      {state} {a}{\\&quot; \\&quot;}
      {_unwrappedJsxEl2}
      {_unwrappedJsxEl9}
    &lt;/div&gt;;
  return _unwrappedJsxEl10;
}</pre>"]
subgraph SG2
node4["<pre align="left">let x: number[] = [];</pre>"]
class node4 returnNetwork;
class node4 componentVariable;
node5["<pre align="left">const z: number[] = [];</pre>"]
class node5 returnNetwork;
class node5 componentVariable;
node6["<pre align="left">let y = state % 2 === 0 ? x : z;</pre>"]
class node6 returnNetwork;
class node6 componentVariable;
node7["<pre align="left">const state = _unwrapped[0];</pre>"]
class node7 returnNetwork;
class node7 componentVariable;
node7 --> node6
node4 --> node6
node5 --> node6
node8["<pre align="left">y.push(state);</pre>"]
class node8 returnNetwork;
node8 -.-> node6
node9["<pre align="left">y.push(i + j * b);</pre>"]
class node9 returnNetwork;
node9 -.-> node6
node10["<pre align="left">y.push(i);</pre>"]
class node10 returnNetwork;
node10 -.-> node6
node11["<pre align="left">const _unwrapped = useState(0);</pre>"]
class node11 returnNetwork;
class node11 componentVariable;
node11 --> node7
node12["<pre align="left">const setState = _unwrapped[1];</pre>"]
class node12 returnNetwork;
class node12 componentVariable;
node11 --> node12
node6 --> node8
node7 --> node8
node13["<pre align="left">for (let i = _unwrapped2, j = _unwrapped4, k = _unwrapped5; j &lt; i; j++) {
  y.push(i + j * b);
}</pre>"]
class node13 returnNetwork;
subgraph SG3
node14["<pre align="left">let i = _unwrapped2,
  j = _unwrapped4,
  k = _unwrapped5;</pre>"]
class node14 returnNetwork;
node15["<pre align="left">let _unwrapped2 = 10;</pre>"]
class node15 returnNetwork;
class node15 componentVariable;
node15 --> node14
node16["<pre align="left">let _unwrapped4 = _unwrapped3[0];</pre>"]
class node16 returnNetwork;
class node16 componentVariable;
node16 --> node14
node17["<pre align="left">let _unwrapped5 = _unwrapped3[1];</pre>"]
class node17 returnNetwork;
class node17 componentVariable;
node17 --> node14
node18["<pre align="left">{
  y.push(i + j * b);
}</pre>"]
subgraph SG4
node6 --> node9
node14 --> node9
node14 --> node9
node19["<pre align="left">let b = _props.b;</pre>"]
class node19 returnNetwork;
class node19 componentVariable;
node19 --> node9
end
node18 -.-> SG4
class node18 blockSegment
end
node13 -.-> SG3
class node13 blockSegment
node14 --> node13
node14 --> node13
node20["<pre align="left">const _unwrapped3 = [5, 6];</pre>"]
class node20 returnNetwork;
class node20 componentVariable;
node20 --> node16
node20 --> node17
node21["<pre align="left">let a = _props.a;</pre>"]
class node21 returnNetwork;
class node21 componentVariable;
node2 --> node21
node2 --> node19
node22["<pre align="left">for (let i = _unwrapped6; i &lt; 10; i++) {
  y.push(i);
}</pre>"]
class node22 returnNetwork;
subgraph SG5
node23["<pre align="left">let i = _unwrapped6;</pre>"]
class node23 returnNetwork;
node24["<pre align="left">let _unwrapped6 = 10;</pre>"]
class node24 returnNetwork;
class node24 componentVariable;
node24 --> node23
node25["<pre align="left">{
  y.push(i);
}</pre>"]
subgraph SG6
node6 --> node10
node23 --> node10
end
node25 -.-> SG6
class node25 blockSegment
end
node22 -.-> SG5
class node22 blockSegment
node23 --> node22
node26["<pre align="left">const m = y;</pre>"]
class node26 returnNetwork;
class node26 componentVariable;
node6 --> node26
node27["<pre align="left">m.push(i);</pre>"]
class node27 returnNetwork;
node27 -.-> node26
node28["<pre align="left">for (let i = _unwrapped7; i &lt; 10; i++) {
  m.push(i);
}</pre>"]
class node28 returnNetwork;
subgraph SG7
node29["<pre align="left">let i = _unwrapped7;</pre>"]
class node29 returnNetwork;
node30["<pre align="left">let _unwrapped7 = state;</pre>"]
class node30 returnNetwork;
class node30 componentVariable;
node30 --> node29
node31["<pre align="left">{
  m.push(i);
}</pre>"]
subgraph SG8
node26 --> node27
node29 --> node27
end
node31 -.-> SG8
class node31 blockSegment
end
node28 -.-> SG7
class node28 blockSegment
node7 --> node28
node29 --> node28
node7 --> node30
node32["<pre align="left">console.log(\\&quot;Hello world\\&quot;);</pre>"]
node33["<pre align="left">const _unwrappedJsxEl = () =&gt; setState(p =&gt; p + 1);</pre>"]
class node33 returnNetwork;
class node33 componentVariable;
node12 --> node33
node34["<pre align="left">const _unwrappedJsxEl2 = &lt;button onClick={_unwrappedJsxEl}&gt;Click here&lt;/button&gt;;</pre>"]
class node34 returnNetwork;
class node34 componentVariable;
node33 --> node34
node35["<pre align="left">const _unwrappedJsxEl3 = JSON.stringify(y);</pre>"]
class node35 returnNetwork;
class node35 componentVariable;
node6 --> node35
node36["<pre align="left">const _unwrappedJsxEl4 = &lt;li&gt;{_unwrappedJsxEl3}&lt;/li&gt;;</pre>"]
class node36 returnNetwork;
class node36 componentVariable;
node35 --> node36
node37["<pre align="left">const _unwrappedJsxEl5 = JSON.stringify(x);</pre>"]
class node37 returnNetwork;
class node37 componentVariable;
node4 --> node37
node38["<pre align="left">const _unwrappedJsxEl6 = &lt;li&gt;{_unwrappedJsxEl5}&lt;/li&gt;;</pre>"]
class node38 returnNetwork;
class node38 componentVariable;
node37 --> node38
node39["<pre align="left">const _unwrappedJsxEl7 = JSON.stringify(z);</pre>"]
class node39 returnNetwork;
class node39 componentVariable;
node5 --> node39
node40["<pre align="left">const _unwrappedJsxEl8 = &lt;li&gt;{_unwrappedJsxEl7}&lt;/li&gt;;</pre>"]
class node40 returnNetwork;
class node40 componentVariable;
node39 --> node40
node41["<pre align="left">const _unwrappedJsxEl9 = &lt;ul&gt;
        {_unwrappedJsxEl4}
        {_unwrappedJsxEl6}
        {_unwrappedJsxEl8}
      &lt;/ul&gt;;</pre>"]
class node41 returnNetwork;
class node41 componentVariable;
node36 --> node41
node38 --> node41
node40 --> node41
node42["<pre align="left">const _unwrappedJsxEl10 = &lt;div&gt;
      {state} {a}{\\&quot; \\&quot;}
      {_unwrappedJsxEl2}
      {_unwrappedJsxEl9}
    &lt;/div&gt;;</pre>"]
class node42 returnNetwork;
class node42 componentVariable;
node7 --> node42
node21 --> node42
node34 --> node42
node41 --> node42
node43["<pre align="left">return _unwrappedJsxEl10;</pre>"]
class node43 returnNetwork;
node42 --> node43
end
node3 -.-> SG2
class node3 blockSegment
class node3 rootChild
end
node1 -.-> SG1
class node1 blockSegment",
]
`;

exports[`dependency graph fixture_dependency_graph 2`] = `
[
  "function Test(_props) {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _props
  1 => _unwrapped
  2 => _unwrapped2
  3 => _unwrapped3
  4 => _unwrapped6
  5 => a
  6 => b
  7 => state
  8 => setState
  9 => x
  10 => z
  11 => y
  12 => _unwrapped4
  13 => _unwrapped5
  14 => m
  15 => _unwrapped7
  16 => _unwrappedJsxEl
  17 => _unwrappedJsxEl2
  18 => _unwrappedJsxEl3
  19 => _unwrappedJsxEl4
  20 => _unwrappedJsxEl5
  21 => _unwrappedJsxEl6
  22 => _unwrappedJsxEl7
  23 => _unwrappedJsxEl8
  24 => _unwrappedJsxEl9
  25 => _unwrappedJsxEl10
  */
  26);
  let _unwrapped = _$unforgetCache[1].v;
  _unwrapped = useState(0);
  _$unforgetCache[1].e(_unwrapped);
  let _unwrapped2 = _$unforgetCache[2].v;
  if (_$unforgetCache[2].n) {
    _unwrapped2 = 10;
    _$unforgetCache[2].e(_unwrapped2);
  }
  let _unwrapped3 = _$unforgetCache[3].v;
  if (_$unforgetCache[3].n) {
    _unwrapped3 = [5, 6];
    _$unforgetCache[3].e(_unwrapped3);
  }
  let _unwrapped6 = _$unforgetCache[4].v;
  if (_$unforgetCache[4].n) {
    _unwrapped6 = 10;
    _$unforgetCache[4].e(_unwrapped6);
  }
  console.log("Hello world");
  _$unforgetCache[0].e(_props);
  let a = _$unforgetCache[5].v;
  if (_$unforgetCache[5].n || _props !== _$unforgetCache[0].v) {
    a = _props.a;
    _$unforgetCache[5].e(a);
  }
  let b = _$unforgetCache[6].v;
  if (_$unforgetCache[6].n || _props !== _$unforgetCache[0].v) {
    b = _props.b;
    _$unforgetCache[6].e(b);
  }
  let state = _$unforgetCache[7].v;
  if (_$unforgetCache[7].n || _unwrapped !== _$unforgetCache[1].v) {
    state = _unwrapped[0];
    _$unforgetCache[7].e(state);
  }
  let setState = _$unforgetCache[8].v;
  if (_$unforgetCache[8].n || _unwrapped !== _$unforgetCache[1].v) {
    setState = _unwrapped[1];
    _$unforgetCache[8].e(setState);
  }
  let x: number[] = _$unforgetCache[9].v;
  if (_$unforgetCache[9].n || state !== _$unforgetCache[7].v || b !== _$unforgetCache[6].v) {
    x = [];
    _$unforgetCache[9].e(x);
  }
  let z: number[] = _$unforgetCache[10].v;
  if (_$unforgetCache[10].n || state !== _$unforgetCache[7].v || b !== _$unforgetCache[6].v) {
    z = [];
    _$unforgetCache[10].e(z);
  }
  let y = _$unforgetCache[11].v;
  if (_$unforgetCache[11].n || state !== _$unforgetCache[7].v || x !== _$unforgetCache[9].v || z !== _$unforgetCache[10].v || b !== _$unforgetCache[6].v) {
    y = state % 2 === 0 ? x : z;
    _$unforgetCache[11].e(y);
  }
  if (y !== _$unforgetCache[11].v || state !== _$unforgetCache[7].v) {
    y.push(state);
  }
  let _unwrapped4 = _$unforgetCache[12].v;
  if (_$unforgetCache[12].n || _unwrapped3 !== _$unforgetCache[3].v) {
    _unwrapped4 = _unwrapped3[0];
    _$unforgetCache[12].e(_unwrapped4);
  }
  let _unwrapped5 = _$unforgetCache[13].v;
  if (_$unforgetCache[13].n || _unwrapped3 !== _$unforgetCache[3].v) {
    _unwrapped5 = _unwrapped3[1];
    _$unforgetCache[13].e(_unwrapped5);
  }
  if (_unwrapped2 !== _$unforgetCache[2].v || _unwrapped4 !== _$unforgetCache[12].v || _unwrapped5 !== _$unforgetCache[13].v || y !== _$unforgetCache[11].v || b !== _$unforgetCache[6].v) {
    for (let i = _unwrapped2, j = _unwrapped4, k = _unwrapped5; j < i; j++) {
      if (y !== _$unforgetCache[11].v || b !== _$unforgetCache[6].v) {
        y.push(i + j * b);
      }
    }
  }
  if (_unwrapped6 !== _$unforgetCache[4].v || y !== _$unforgetCache[11].v) {
    for (let i = _unwrapped6; i < 10; i++) {
      if (y !== _$unforgetCache[11].v) {
        y.push(i);
      }
    }
  }
  let m = _$unforgetCache[14].v;
  if (_$unforgetCache[14].n || y !== _$unforgetCache[11].v || state !== _$unforgetCache[7].v) {
    m = y;
    _$unforgetCache[14].e(m);
  }
  let _unwrapped7 = _$unforgetCache[15].v;
  if (_$unforgetCache[15].n || state !== _$unforgetCache[7].v) {
    _unwrapped7 = state;
    _$unforgetCache[15].e(_unwrapped7);
  }
  if (state !== _$unforgetCache[7].v || _unwrapped7 !== _$unforgetCache[15].v || m !== _$unforgetCache[14].v) {
    for (let i = _unwrapped7; i < 10; i++) {
      if (m !== _$unforgetCache[14].v) {
        m.push(i);
      }
    }
  }
  let _unwrappedJsxEl = _$unforgetCache[16].v;
  if (_$unforgetCache[16].n || setState !== _$unforgetCache[8].v) {
    _unwrappedJsxEl = () => setState(p => p + 1);
    _$unforgetCache[16].e(_unwrappedJsxEl);
  }
  let _unwrappedJsxEl2 = _$unforgetCache[17].v;
  if (_$unforgetCache[17].n || _unwrappedJsxEl !== _$unforgetCache[16].v) {
    _unwrappedJsxEl2 = <button onClick={_unwrappedJsxEl}>Click here</button>;
    _$unforgetCache[17].e(_unwrappedJsxEl2);
  }
  let _unwrappedJsxEl3 = _$unforgetCache[18].v;
  if (_$unforgetCache[18].n || y !== _$unforgetCache[11].v) {
    _unwrappedJsxEl3 = JSON.stringify(y);
    _$unforgetCache[18].e(_unwrappedJsxEl3);
  }
  let _unwrappedJsxEl4 = _$unforgetCache[19].v;
  if (_$unforgetCache[19].n || _unwrappedJsxEl3 !== _$unforgetCache[18].v) {
    _unwrappedJsxEl4 = <li>{_unwrappedJsxEl3}</li>;
    _$unforgetCache[19].e(_unwrappedJsxEl4);
  }
  let _unwrappedJsxEl5 = _$unforgetCache[20].v;
  if (_$unforgetCache[20].n || x !== _$unforgetCache[9].v) {
    _unwrappedJsxEl5 = JSON.stringify(x);
    _$unforgetCache[20].e(_unwrappedJsxEl5);
  }
  let _unwrappedJsxEl6 = _$unforgetCache[21].v;
  if (_$unforgetCache[21].n || _unwrappedJsxEl5 !== _$unforgetCache[20].v) {
    _unwrappedJsxEl6 = <li>{_unwrappedJsxEl5}</li>;
    _$unforgetCache[21].e(_unwrappedJsxEl6);
  }
  let _unwrappedJsxEl7 = _$unforgetCache[22].v;
  if (_$unforgetCache[22].n || z !== _$unforgetCache[10].v) {
    _unwrappedJsxEl7 = JSON.stringify(z);
    _$unforgetCache[22].e(_unwrappedJsxEl7);
  }
  let _unwrappedJsxEl8 = _$unforgetCache[23].v;
  if (_$unforgetCache[23].n || _unwrappedJsxEl7 !== _$unforgetCache[22].v) {
    _unwrappedJsxEl8 = <li>{_unwrappedJsxEl7}</li>;
    _$unforgetCache[23].e(_unwrappedJsxEl8);
  }
  let _unwrappedJsxEl9 = _$unforgetCache[24].v;
  if (_$unforgetCache[24].n || _unwrappedJsxEl4 !== _$unforgetCache[19].v || _unwrappedJsxEl6 !== _$unforgetCache[21].v || _unwrappedJsxEl8 !== _$unforgetCache[23].v) {
    _unwrappedJsxEl9 = <ul>
        {_unwrappedJsxEl4}
        {_unwrappedJsxEl6}
        {_unwrappedJsxEl8}
      </ul>;
    _$unforgetCache[24].e(_unwrappedJsxEl9);
  }
  let _unwrappedJsxEl10 = _$unforgetCache[25].v;
  if (_$unforgetCache[25].n || state !== _$unforgetCache[7].v || a !== _$unforgetCache[5].v || _unwrappedJsxEl2 !== _$unforgetCache[17].v || _unwrappedJsxEl9 !== _$unforgetCache[24].v) {
    _unwrappedJsxEl10 = <div>
      {state} {a}{" "}
      {_unwrappedJsxEl2}
      {_unwrappedJsxEl9}
    </div>;
    _$unforgetCache[25].e(_unwrappedJsxEl10);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl10;
}",
]
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component fixtures applyModification fixture_1 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
export default function SimpleJSX() {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _unwrappedJsxEl
  */
  1);
  let _unwrappedJsxEl = _$unforgetCache[0].v;
  if (_$unforgetCache[0].n) {
    _unwrappedJsxEl = <p>Hello world!</p>;
    _$unforgetCache[0].e(_unwrappedJsxEl);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl;
}"
`;

exports[`Component fixtures applyModification fixture_2 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
const SimpleJSXWithArrowFunction = () => {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _unwrappedJsxEl
  */
  1);
  let _unwrappedJsxEl = _$unforgetCache[0].v;
  if (_$unforgetCache[0].n) {
    _unwrappedJsxEl = <div>Hello world!</div>;
    _$unforgetCache[0].e(_unwrappedJsxEl);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl;
};
export default SimpleJSXWithArrowFunction;"
`;

exports[`Component fixtures applyModification fixture_3 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
const SimpleJSXWithFunctionExpression = function () {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _unwrappedJsxEl
  */
  1);
  let _unwrappedJsxEl = _$unforgetCache[0].v;
  if (_$unforgetCache[0].n) {
    _unwrappedJsxEl = <div>Hello world!</div>;
    _$unforgetCache[0].e(_unwrappedJsxEl);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl;
};
export default SimpleJSXWithFunctionExpression;"
`;

exports[`Component fixtures applyModification fixture_4 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
import { useState } from "react";
export default function Counter() {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _unwrapped
  1 => state
  2 => setState
  3 => _unwrappedJsxExp
  4 => _unwrappedJsxEl
  5 => _unwrappedJsxEl2
  6 => _unwrappedJsxEl3
  7 => _unwrappedJsxEl4
  */
  8);
  let _unwrapped = _$unforgetCache[0].v;
  _unwrapped = useState(0);
  _$unforgetCache[0].e(_unwrapped);
  let state = _$unforgetCache[1].v;
  if (_$unforgetCache[1].n || _unwrapped !== _$unforgetCache[0].v) {
    state = _unwrapped[0];
    _$unforgetCache[1].e(state);
  }
  let setState = _$unforgetCache[2].v;
  if (_$unforgetCache[2].n || _unwrapped !== _$unforgetCache[0].v) {
    setState = _unwrapped[1];
    _$unforgetCache[2].e(setState);
  }
  let _unwrappedJsxExp = _$unforgetCache[3].v;
  if (_$unforgetCache[3].n || setState !== _$unforgetCache[2].v || state !== _$unforgetCache[1].v) {
    _unwrappedJsxExp = () => setState(state + 1);
    _$unforgetCache[3].e(_unwrappedJsxExp);
  }
  let _unwrappedJsxEl = _$unforgetCache[4].v;
  if (_$unforgetCache[4].n || _unwrappedJsxExp !== _$unforgetCache[3].v) {
    _unwrappedJsxEl = <button onClick={_unwrappedJsxExp}>Increment</button>;
    _$unforgetCache[4].e(_unwrappedJsxEl);
  }
  let _unwrappedJsxEl2 = _$unforgetCache[5].v;
  if (_$unforgetCache[5].n || state !== _$unforgetCache[1].v) {
    _unwrappedJsxEl2 = <span data-testid="state-printer">Count: {state}</span>;
    _$unforgetCache[5].e(_unwrappedJsxEl2);
  }
  let _unwrappedJsxEl3 = _$unforgetCache[6].v;
  if (_$unforgetCache[6].n || _unwrappedJsxEl2 !== _$unforgetCache[5].v) {
    _unwrappedJsxEl3 = <div>
        {_unwrappedJsxEl2}
      </div>;
    _$unforgetCache[6].e(_unwrappedJsxEl3);
  }
  let _unwrappedJsxEl4 = _$unforgetCache[7].v;
  if (_$unforgetCache[7].n || _unwrappedJsxEl !== _$unforgetCache[4].v || _unwrappedJsxEl3 !== _$unforgetCache[6].v) {
    _unwrappedJsxEl4 = <div>
      {_unwrappedJsxEl}
      {_unwrappedJsxEl3}
    </div>;
    _$unforgetCache[7].e(_unwrappedJsxEl4);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl4;
}"
`;

exports[`Component fixtures applyModification fixture_5 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
import { useState } from "react";
export default function CounterWithMutationTracking() {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _unwrapped
  1 => state
  2 => setState
  3 => text
  4 => _unwrappedJsxExp
  5 => _unwrappedJsxEl
  6 => _unwrappedJsxEl2
  7 => _unwrappedJsxEl3
  8 => _unwrappedJsxEl4
  */
  9);
  let _unwrapped = _$unforgetCache[0].v;
  _unwrapped = useState(0);
  _$unforgetCache[0].e(_unwrapped);
  let state = _$unforgetCache[1].v;
  if (_$unforgetCache[1].n || _unwrapped !== _$unforgetCache[0].v) {
    state = _unwrapped[0];
    _$unforgetCache[1].e(state);
  }
  let setState = _$unforgetCache[2].v;
  if (_$unforgetCache[2].n || _unwrapped !== _$unforgetCache[0].v) {
    setState = _unwrapped[1];
    _$unforgetCache[2].e(setState);
  }
  let text = _$unforgetCache[3].v;
  if (_$unforgetCache[3].n || state !== _$unforgetCache[1].v) {
    text = "The number is: ";
    _$unforgetCache[3].e(text);
  }
  if (state !== _$unforgetCache[1].v) {
    if (state % 2 === 0) {
      text += "even";
    } else {
      text += "odd";
    }
  }
  let _unwrappedJsxExp = _$unforgetCache[4].v;
  if (_$unforgetCache[4].n || setState !== _$unforgetCache[2].v || state !== _$unforgetCache[1].v) {
    _unwrappedJsxExp = () => setState(state + 1);
    _$unforgetCache[4].e(_unwrappedJsxExp);
  }
  let _unwrappedJsxEl = _$unforgetCache[5].v;
  if (_$unforgetCache[5].n || _unwrappedJsxExp !== _$unforgetCache[4].v) {
    _unwrappedJsxEl = <button onClick={_unwrappedJsxExp}>Increment</button>;
    _$unforgetCache[5].e(_unwrappedJsxEl);
  }
  let _unwrappedJsxEl2 = _$unforgetCache[6].v;
  if (_$unforgetCache[6].n || state !== _$unforgetCache[1].v) {
    _unwrappedJsxEl2 = <span>Count: {state}</span>;
    _$unforgetCache[6].e(_unwrappedJsxEl2);
  }
  let _unwrappedJsxEl3 = _$unforgetCache[7].v;
  if (_$unforgetCache[7].n || _unwrappedJsxEl2 !== _$unforgetCache[6].v || text !== _$unforgetCache[3].v) {
    _unwrappedJsxEl3 = <div data-testid="state-printer">
        {_unwrappedJsxEl2} {text}
      </div>;
    _$unforgetCache[7].e(_unwrappedJsxEl3);
  }
  let _unwrappedJsxEl4 = _$unforgetCache[8].v;
  if (_$unforgetCache[8].n || _unwrappedJsxEl !== _$unforgetCache[5].v || _unwrappedJsxEl3 !== _$unforgetCache[7].v) {
    _unwrappedJsxEl4 = <div>
      {_unwrappedJsxEl}
      {_unwrappedJsxEl3}
    </div>;
    _$unforgetCache[8].e(_unwrappedJsxEl4);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl4;
}"
`;

exports[`Component fixtures applyModification fixture_6 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
import { useState } from "react";
function InnerComponentWithProps(_props) {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _props
  1 => count
  2 => text
  3 => _unwrappedJsxEl
  4 => _unwrappedJsxEl2
  */
  5);
  let count = _$unforgetCache[1].v;
  if (_$unforgetCache[1].n || _props !== _$unforgetCache[0].v) {
    count = _props.count;
    _$unforgetCache[1].e(count);
  }
  let text = _$unforgetCache[2].v;
  if (_$unforgetCache[2].n || _props !== _$unforgetCache[0].v) {
    text = _props.text;
    _$unforgetCache[2].e(text);
  }
  let _unwrappedJsxEl = _$unforgetCache[3].v;
  if (_$unforgetCache[3].n || count !== _$unforgetCache[1].v) {
    _unwrappedJsxEl = <span>Count: {count}</span>;
    _$unforgetCache[3].e(_unwrappedJsxEl);
  }
  let _unwrappedJsxEl2 = _$unforgetCache[4].v;
  if (_$unforgetCache[4].n || _unwrappedJsxEl !== _$unforgetCache[3].v || text !== _$unforgetCache[2].v) {
    _unwrappedJsxEl2 = <div data-testid="state-printer">
      {_unwrappedJsxEl} {text}
    </div>;
    _$unforgetCache[4].e(_unwrappedJsxEl2);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl2;
}
export default function CounterWithInnerComponents() {
  const [_$unforgetCache2, _$unforgetCommit2, _$unforgetNull2] = useCreateCache$unforget(
  /*
  0 => _unwrapped
  1 => state
  2 => setState
  3 => text
  4 => _unwrappedJsxExp
  5 => _unwrappedJsxEl3
  6 => _unwrappedJsxEl4
  7 => _unwrappedJsxEl5
  */
  8);
  let _unwrapped = _$unforgetCache2[0].v;
  _unwrapped = useState(0);
  _$unforgetCache2[0].e(_unwrapped);
  let state = _$unforgetCache2[1].v;
  if (_$unforgetCache2[1].n || _unwrapped !== _$unforgetCache2[0].v) {
    state = _unwrapped[0];
    _$unforgetCache2[1].e(state);
  }
  let setState = _$unforgetCache2[2].v;
  if (_$unforgetCache2[2].n || _unwrapped !== _$unforgetCache2[0].v) {
    setState = _unwrapped[1];
    _$unforgetCache2[2].e(setState);
  }
  let text = _$unforgetCache2[3].v;
  if (_$unforgetCache2[3].n || state !== _$unforgetCache2[1].v) {
    text = "The number is: ";
    _$unforgetCache2[3].e(text);
  }
  if (state !== _$unforgetCache2[1].v) {
    if (state % 2 === 0) {
      text += "even";
    } else {
      text += "odd";
    }
  }
  let _unwrappedJsxExp = _$unforgetCache2[4].v;
  if (_$unforgetCache2[4].n || setState !== _$unforgetCache2[2].v || state !== _$unforgetCache2[1].v) {
    _unwrappedJsxExp = () => setState(state + 1);
    _$unforgetCache2[4].e(_unwrappedJsxExp);
  }
  let _unwrappedJsxEl3 = _$unforgetCache2[5].v;
  if (_$unforgetCache2[5].n || _unwrappedJsxExp !== _$unforgetCache2[4].v) {
    _unwrappedJsxEl3 = <button onClick={_unwrappedJsxExp}>Increment</button>;
    _$unforgetCache2[5].e(_unwrappedJsxEl3);
  }
  let _unwrappedJsxEl4 = _$unforgetCache2[6].v;
  if (_$unforgetCache2[6].n || state !== _$unforgetCache2[1].v || text !== _$unforgetCache2[3].v) {
    _unwrappedJsxEl4 = <InnerComponentWithProps count={state} text={text} />;
    _$unforgetCache2[6].e(_unwrappedJsxEl4);
  }
  let _unwrappedJsxEl5 = _$unforgetCache2[7].v;
  if (_$unforgetCache2[7].n || _unwrappedJsxEl3 !== _$unforgetCache2[5].v || _unwrappedJsxEl4 !== _$unforgetCache2[6].v) {
    _unwrappedJsxEl5 = <div>
      {_unwrappedJsxEl3}
      {_unwrappedJsxEl4}
    </div>;
    _$unforgetCache2[7].e(_unwrappedJsxEl5);
  }
  _$unforgetCommit2();
  return _unwrappedJsxEl5;
}"
`;

exports[`Component fixtures applyModification fixture_7 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
import { useState } from "react";
export default function CounterWithEarlyReturn() {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _unwrapped
  1 => state
  2 => setState
  3 => _unwrappedJsxExp2
  4 => _unwrappedJsxEl5
  5 => _unwrappedJsxEl6
  6 => _unwrappedJsxExp
  7 => _unwrappedJsxEl
  8 => _unwrappedJsxEl2
  9 => _unwrappedJsxEl3
  10 => _unwrappedJsxEl4
  */
  11);
  let _unwrapped = _$unforgetCache[0].v;
  _unwrapped = useState(0);
  _$unforgetCache[0].e(_unwrapped);
  let state = _$unforgetCache[1].v;
  if (_$unforgetCache[1].n || _unwrapped !== _$unforgetCache[0].v) {
    state = _unwrapped[0];
    _$unforgetCache[1].e(state);
  }
  let setState = _$unforgetCache[2].v;
  if (_$unforgetCache[2].n || _unwrapped !== _$unforgetCache[0].v) {
    setState = _unwrapped[1];
    _$unforgetCache[2].e(setState);
  }
  if (state !== _$unforgetCache[1].v || setState !== _$unforgetCache[2].v) {
    if (state % 2 === 0) {
      let _unwrappedJsxExp2 = _$unforgetCache[3].v;
      if (_$unforgetCache[3].n || setState !== _$unforgetCache[2].v || state !== _$unforgetCache[1].v) {
        _unwrappedJsxExp2 = () => setState(state + 1);
        _$unforgetCache[3].e(_unwrappedJsxExp2);
      }
      let _unwrappedJsxEl5 = _$unforgetCache[4].v;
      if (_$unforgetCache[4].n || _unwrappedJsxExp2 !== _$unforgetCache[3].v) {
        _unwrappedJsxEl5 = <button onClick={_unwrappedJsxExp2}>Increment</button>;
        _$unforgetCache[4].e(_unwrappedJsxEl5);
      }
      let _unwrappedJsxEl6 = _$unforgetCache[5].v;
      if (_$unforgetCache[5].n || _unwrappedJsxEl5 !== _$unforgetCache[4].v) {
        _unwrappedJsxEl6 = <div>
        We're inside the early return
        {_unwrappedJsxEl5}
      </div>;
        _$unforgetCache[5].e(_unwrappedJsxEl6);
      }
      _$unforgetCommit();
      return _unwrappedJsxEl6;
    }
  }
  let _unwrappedJsxExp = _$unforgetCache[6].v;
  if (_$unforgetCache[6].n || setState !== _$unforgetCache[2].v || state !== _$unforgetCache[1].v) {
    _unwrappedJsxExp = () => setState(state + 1);
    _$unforgetCache[6].e(_unwrappedJsxExp);
  }
  let _unwrappedJsxEl = _$unforgetCache[7].v;
  if (_$unforgetCache[7].n || _unwrappedJsxExp !== _$unforgetCache[6].v) {
    _unwrappedJsxEl = <button onClick={_unwrappedJsxExp}>Increment</button>;
    _$unforgetCache[7].e(_unwrappedJsxEl);
  }
  let _unwrappedJsxEl2 = _$unforgetCache[8].v;
  if (_$unforgetCache[8].n || state !== _$unforgetCache[1].v) {
    _unwrappedJsxEl2 = <span>Count: {state}</span>;
    _$unforgetCache[8].e(_unwrappedJsxEl2);
  }
  let _unwrappedJsxEl3 = _$unforgetCache[9].v;
  if (_$unforgetCache[9].n || _unwrappedJsxEl2 !== _$unforgetCache[8].v) {
    _unwrappedJsxEl3 = <div>
        {_unwrappedJsxEl2}
      </div>;
    _$unforgetCache[9].e(_unwrappedJsxEl3);
  }
  let _unwrappedJsxEl4 = _$unforgetCache[10].v;
  if (_$unforgetCache[10].n || _unwrappedJsxEl !== _$unforgetCache[7].v || _unwrappedJsxEl3 !== _$unforgetCache[9].v) {
    _unwrappedJsxEl4 = <div>
      {_unwrappedJsxEl}
      {_unwrappedJsxEl3}
    </div>;
    _$unforgetCache[10].e(_unwrappedJsxEl4);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl4;
}"
`;

exports[`Component fixtures applyModification fixture_8 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
import { useState } from "react";
export default function CounterWithEarlyReturnWithoutDirectlyUsingTheVariableInJSX() {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _unwrapped
  1 => state
  2 => setState
  3 => _unwrappedJsxEl5
  4 => newValue
  5 => _unwrappedJsxExp
  6 => _unwrappedJsxEl
  7 => _unwrappedJsxEl2
  8 => _unwrappedJsxEl3
  9 => _unwrappedJsxEl4
  */
  10);
  let _unwrapped = _$unforgetCache[0].v;
  _unwrapped = useState(0);
  _$unforgetCache[0].e(_unwrapped);
  let state = _$unforgetCache[1].v;
  if (_$unforgetCache[1].n || _unwrapped !== _$unforgetCache[0].v) {
    state = _unwrapped[0];
    _$unforgetCache[1].e(state);
  }
  let setState = _$unforgetCache[2].v;
  if (_$unforgetCache[2].n || _unwrapped !== _$unforgetCache[0].v) {
    setState = _unwrapped[1];
    _$unforgetCache[2].e(setState);
  }
  if (state !== _$unforgetCache[1].v) {
    if (state % 2 === 1) {
      let _unwrappedJsxEl5 = _$unforgetCache[3].v;
      if (_$unforgetCache[3].n) {
        _unwrappedJsxEl5 = <div>We're inside the early return</div>;
        _$unforgetCache[3].e(_unwrappedJsxEl5);
      }
      _$unforgetCommit();
      return _unwrappedJsxEl5;
    }
  }
  let newValue = _$unforgetCache[4].v;
  if (_$unforgetCache[4].n || state !== _$unforgetCache[1].v) {
    newValue = state + 1;
    _$unforgetCache[4].e(newValue);
  }
  let _unwrappedJsxExp = _$unforgetCache[5].v;
  if (_$unforgetCache[5].n || setState !== _$unforgetCache[2].v || state !== _$unforgetCache[1].v) {
    _unwrappedJsxExp = () => setState(state + 1);
    _$unforgetCache[5].e(_unwrappedJsxExp);
  }
  let _unwrappedJsxEl = _$unforgetCache[6].v;
  if (_$unforgetCache[6].n || _unwrappedJsxExp !== _$unforgetCache[5].v) {
    _unwrappedJsxEl = <button onClick={_unwrappedJsxExp}>Increment</button>;
    _$unforgetCache[6].e(_unwrappedJsxEl);
  }
  let _unwrappedJsxEl2 = _$unforgetCache[7].v;
  if (_$unforgetCache[7].n || newValue !== _$unforgetCache[4].v) {
    _unwrappedJsxEl2 = <span>Count: {newValue}</span>;
    _$unforgetCache[7].e(_unwrappedJsxEl2);
  }
  let _unwrappedJsxEl3 = _$unforgetCache[8].v;
  if (_$unforgetCache[8].n || _unwrappedJsxEl2 !== _$unforgetCache[7].v) {
    _unwrappedJsxEl3 = <div>
        {_unwrappedJsxEl2}
      </div>;
    _$unforgetCache[8].e(_unwrappedJsxEl3);
  }
  let _unwrappedJsxEl4 = _$unforgetCache[9].v;
  if (_$unforgetCache[9].n || _unwrappedJsxEl !== _$unforgetCache[6].v || _unwrappedJsxEl3 !== _$unforgetCache[8].v) {
    _unwrappedJsxEl4 = <div>
      {_unwrappedJsxEl}
      {_unwrappedJsxEl3}
    </div>;
    _$unforgetCache[9].e(_unwrappedJsxEl4);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl4;
}"
`;

exports[`Component fixtures applyModification fixture_9 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
import { useState } from "react";
const numbers1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];
const numbers2 = numbers1.filter(number => number % 2 === 0);
export default function UserList() {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _unwrapped2
  1 => _unwrapped
  2 => numbers
  3 => setNumbers
  4 => filteredNumbers
  5 => currentN
  6 => handleUserClick
  7 => _unwrappedJsxExp
  8 => _unwrappedJsxEl
  9 => _unwrappedJsxEl2
  10 => _unwrappedJsxEl3
  */
  11);
  let _unwrapped2 = _$unforgetCache[0].v;
  _unwrapped2 = useState(numbers1);
  _$unforgetCache[0].e(_unwrapped2);
  let _unwrapped = _$unforgetCache[1].v;
  if (_$unforgetCache[1].n) {
    _unwrapped = 0;
    _$unforgetCache[1].e(_unwrapped);
  }
  let numbers = _$unforgetCache[2].v;
  if (_$unforgetCache[2].n || _unwrapped2 !== _$unforgetCache[0].v) {
    numbers = _unwrapped2[0];
    _$unforgetCache[2].e(numbers);
  }
  let setNumbers = _$unforgetCache[3].v;
  if (_$unforgetCache[3].n || _unwrapped2 !== _$unforgetCache[0].v) {
    setNumbers = _unwrapped2[1];
    _$unforgetCache[3].e(setNumbers);
  }
  let filteredNumbers = _$unforgetCache[4].v;
  if (_$unforgetCache[4].n || numbers !== _$unforgetCache[2].v) {
    filteredNumbers = [];
    _$unforgetCache[4].e(filteredNumbers);
  }
  if (numbers !== _$unforgetCache[2].v || _unwrapped !== _$unforgetCache[1].v || filteredNumbers !== _$unforgetCache[4].v) {
    for (let i = _unwrapped; i < numbers.length; i++) {
      let currentN = _$unforgetCache[5].v;
      if (_$unforgetCache[5].n || numbers !== _$unforgetCache[2].v) {
        currentN = numbers[i];
        _$unforgetCache[5].e(currentN);
      }
      if (filteredNumbers !== _$unforgetCache[4].v || currentN !== _$unforgetCache[5].v) {
        if (i % 2 === 0) {
          if (filteredNumbers !== _$unforgetCache[4].v || currentN !== _$unforgetCache[5].v) {
            filteredNumbers.push(currentN);
          }
        }
      }
    }
  }
  let handleUserClick = _$unforgetCache[6].v;
  if (_$unforgetCache[6].n || setNumbers !== _$unforgetCache[3].v) {
    handleUserClick = () => {
      setNumbers(p => numbers1 === p ? numbers2 : numbers1);
    };
    _$unforgetCache[6].e(handleUserClick);
  }
  let _unwrappedJsxExp = _$unforgetCache[7].v;
  if (_$unforgetCache[7].n || filteredNumbers !== _$unforgetCache[4].v) {
    _unwrappedJsxExp = filteredNumbers.map(n => <div key={n}>{n}</div>);
    _$unforgetCache[7].e(_unwrappedJsxExp);
  }
  let _unwrappedJsxEl = _$unforgetCache[8].v;
  if (_$unforgetCache[8].n || handleUserClick !== _$unforgetCache[6].v) {
    _unwrappedJsxEl = <button onClick={handleUserClick}>Toggle even ones</button>;
    _$unforgetCache[8].e(_unwrappedJsxEl);
  }
  let _unwrappedJsxEl2 = _$unforgetCache[9].v;
  if (_$unforgetCache[9].n || _unwrappedJsxExp !== _$unforgetCache[7].v) {
    _unwrappedJsxEl2 = <ul>
        {_unwrappedJsxExp}
      </ul>;
    _$unforgetCache[9].e(_unwrappedJsxEl2);
  }
  let _unwrappedJsxEl3 = _$unforgetCache[10].v;
  if (_$unforgetCache[10].n || _unwrappedJsxEl !== _$unforgetCache[8].v || _unwrappedJsxEl2 !== _$unforgetCache[9].v) {
    _unwrappedJsxEl3 = <div>
      {_unwrappedJsxEl}
      {_unwrappedJsxEl2}
    </div>;
    _$unforgetCache[10].e(_unwrappedJsxEl3);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl3;
}"
`;

exports[`Component fixtures applyModification fixture_10 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
import { useState, useEffect, useMemo, useCallback } from "react";
const fetchUser = async () => {
  const response = await fetch("https://api.github.com/users/mohebifar");
  if (!response.ok) {
    throw new Error("Network response was not ok");
  }
  return await response.json();
};
const fetchUserFollowers = async () => {
  const response = await fetch("https://api.github.com/users/mohebifar/followers");
  if (!response.ok) {
    throw new Error("Network response was not ok");
  }
  return await response.json();
};
function UserList() {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _unwrapped2
  1 => _unwrapped
  2 => _unwrapped3
  3 => _unwrapped4
  4 => _unwrapped5
  5 => handleUserClick
  6 => _unwrapped6
  7 => _unwrappedJsxEl
  8 => _unwrappedJsxEl4
  9 => user
  10 => setUser
  11 => followers
  12 => setFollowers
  13 => loading
  14 => setLoading
  15 => error
  16 => setError
  17 => setFilterUsers
  18 => setShouldFilterUsers
  19 => toggleEvenOnes
  20 => memoizedFollowers
  21 => filteredUsers
  22 => user
  23 => usersForUI
  24 => _unwrappedJsxEl2
  25 => userListElement
  26 => _unwrappedJsxExp
  27 => _unwrappedJsxExp2
  28 => _unwrappedJsxExp3
  29 => _unwrappedJsxEl3
  30 => _unwrappedJsxEl5
  31 => _unwrappedJsxEl6
  32 => _unwrappedJsxEl7
  */
  33);
  let _unwrapped2 = _$unforgetCache[0].v;
  _unwrapped2 = useState({});
  _$unforgetCache[0].e(_unwrapped2);
  let _unwrapped = _$unforgetCache[1].v;
  _unwrapped = useState([]);
  _$unforgetCache[1].e(_unwrapped);
  let _unwrapped3 = _$unforgetCache[2].v;
  _unwrapped3 = useState(true);
  _$unforgetCache[2].e(_unwrapped3);
  let _unwrapped4 = _$unforgetCache[3].v;
  _unwrapped4 = useState(null);
  _$unforgetCache[3].e(_unwrapped4);
  let _unwrapped5 = _$unforgetCache[4].v;
  _unwrapped5 = useState(false);
  _$unforgetCache[4].e(_unwrapped5);
  // useCallback to memoize a hypothetical handler function
  let handleUserClick = _$unforgetCache[5].v;

  // without useCallback
  handleUserClick = useCallback(userId => {
    console.log("User clicked:", userId);
    // Handler logic here...
  }, []);
  _$unforgetCache[5].e(handleUserClick);
  let _unwrapped6 = _$unforgetCache[6].v;
  if (_$unforgetCache[6].n) {
    _unwrapped6 = 0;
    _$unforgetCache[6].e(_unwrapped6);
  }
  let _unwrappedJsxEl = _$unforgetCache[7].v;
  if (_$unforgetCache[7].n) {
    _unwrappedJsxEl = <div>Loading...</div>;
    _$unforgetCache[7].e(_unwrappedJsxEl);
  }
  let _unwrappedJsxEl4 = _$unforgetCache[8].v;
  if (_$unforgetCache[8].n) {
    _unwrappedJsxEl4 = <h1>User List</h1>;
    _$unforgetCache[8].e(_unwrappedJsxEl4);
  }
  let user = _$unforgetCache[9].v;
  if (_$unforgetCache[9].n || _unwrapped2 !== _$unforgetCache[0].v) {
    user = _unwrapped2[0];
    _$unforgetCache[9].e(user);
  }
  let setUser = _$unforgetCache[10].v;
  if (_$unforgetCache[10].n || _unwrapped2 !== _$unforgetCache[0].v) {
    setUser = _unwrapped2[1];
    _$unforgetCache[10].e(setUser);
  }
  let followers = _$unforgetCache[11].v;
  if (_$unforgetCache[11].n || _unwrapped !== _$unforgetCache[1].v) {
    followers = _unwrapped[0];
    _$unforgetCache[11].e(followers);
  }
  let setFollowers = _$unforgetCache[12].v;
  if (_$unforgetCache[12].n || _unwrapped !== _$unforgetCache[1].v) {
    setFollowers = _unwrapped[1];
    _$unforgetCache[12].e(setFollowers);
  }
  let loading = _$unforgetCache[13].v;
  if (_$unforgetCache[13].n || _unwrapped3 !== _$unforgetCache[2].v) {
    loading = _unwrapped3[0];
    _$unforgetCache[13].e(loading);
  }
  let setLoading = _$unforgetCache[14].v;
  if (_$unforgetCache[14].n || _unwrapped3 !== _$unforgetCache[2].v) {
    setLoading = _unwrapped3[1];
    _$unforgetCache[14].e(setLoading);
  }
  let error = _$unforgetCache[15].v;
  if (_$unforgetCache[15].n || _unwrapped4 !== _$unforgetCache[3].v) {
    error = _unwrapped4[0];
    _$unforgetCache[15].e(error);
  }
  let setError = _$unforgetCache[16].v;
  if (_$unforgetCache[16].n || _unwrapped4 !== _$unforgetCache[3].v) {
    setError = _unwrapped4[1];
    _$unforgetCache[16].e(setError);
  }
  let setFilterUsers = _$unforgetCache[17].v;
  if (_$unforgetCache[17].n || _unwrapped5 !== _$unforgetCache[4].v) {
    setFilterUsers = _unwrapped5[0];
    _$unforgetCache[17].e(setFilterUsers);
  }
  let setShouldFilterUsers = _$unforgetCache[18].v;
  if (_$unforgetCache[18].n || _unwrapped5 !== _$unforgetCache[4].v) {
    setShouldFilterUsers = _unwrapped5[1];
    _$unforgetCache[18].e(setShouldFilterUsers);
  }
  useEffect(() => {
    Promise.all([fetchUser(), fetchUserFollowers(), new Promise(resolve => setTimeout(resolve, 2000))]).then(([userData, followersData]) => {
      setFollowers(followersData);
      setUser(userData);
      setLoading(false);
    }).catch(error => {
      setError(error.toString());
      setLoading(false);
    });
  }, []);
  let toggleEvenOnes = _$unforgetCache[19].v;
  if (_$unforgetCache[19].n || setShouldFilterUsers !== _$unforgetCache[18].v) {
    toggleEvenOnes = () => {
      setShouldFilterUsers(prev => !prev);
    };
    _$unforgetCache[19].e(toggleEvenOnes);
  }
  let memoizedFollowers = _$unforgetCache[20].v;
  memoizedFollowers = useMemo(() => followers, [followers]);
  _$unforgetCache[20].e(memoizedFollowers);
  let filteredUsers = _$unforgetCache[21].v;
  if (_$unforgetCache[21].n || memoizedFollowers !== _$unforgetCache[20].v) {
    filteredUsers = [];
    _$unforgetCache[21].e(filteredUsers);
  }
  if (memoizedFollowers !== _$unforgetCache[20].v || _unwrapped6 !== _$unforgetCache[6].v || filteredUsers !== _$unforgetCache[21].v) {
    for (let i = _unwrapped6; i < memoizedFollowers.length; i++) {
      let user = _$unforgetCache[22].v;
      if (_$unforgetCache[22].n || memoizedFollowers !== _$unforgetCache[20].v) {
        user = memoizedFollowers[i];
        _$unforgetCache[22].e(user);
      }
      if (filteredUsers !== _$unforgetCache[21].v || user !== _$unforgetCache[22].v) {
        if (i % 2 === 0) {
          if (filteredUsers !== _$unforgetCache[21].v || user !== _$unforgetCache[22].v) {
            filteredUsers.push(user);
          }
        }
      }
    }
  }
  let usersForUI = _$unforgetCache[23].v;

  // Early return for loading state
  if (_$unforgetCache[23].n || setFilterUsers !== _$unforgetCache[17].v || filteredUsers !== _$unforgetCache[21].v || memoizedFollowers !== _$unforgetCache[20].v) {
    usersForUI = setFilterUsers ? filteredUsers : memoizedFollowers;
    _$unforgetCache[23].e(usersForUI);
  }
  if (loading !== _$unforgetCache[13].v || _unwrappedJsxEl !== _$unforgetCache[7].v) {
    if (loading) {
      _$unforgetCommit();
      return _unwrappedJsxEl;
    }

    // Early return for error state
  }
  let _unwrappedJsxEl2 = _$unforgetCache[24].v;
  if (_$unforgetCache[24].n || error !== _$unforgetCache[15].v) {
    _unwrappedJsxEl2 = <div>Error: {error}</div>;
    _$unforgetCache[24].e(_unwrappedJsxEl2);
  }
  if (error !== _$unforgetCache[15].v || _unwrappedJsxEl2 !== _$unforgetCache[24].v) {
    if (error) {
      _$unforgetCommit();
      return _unwrappedJsxEl2;
    }
  }
  let userListElement = _$unforgetCache[25].v;
  if (_$unforgetCache[25].n || usersForUI !== _$unforgetCache[23].v) {
    userListElement = usersForUI.map(follower => <UserListItem key={follower.id} user={follower} />);
    _$unforgetCache[25].e(userListElement);
  }
  let _unwrappedJsxExp = _$unforgetCache[26].v;
  if (_$unforgetCache[26].n || user !== _$unforgetCache[9].v) {
    _unwrappedJsxExp = user.name;
    _$unforgetCache[26].e(_unwrappedJsxExp);
  }
  let _unwrappedJsxExp2 = _$unforgetCache[27].v;
  if (_$unforgetCache[27].n || setFilterUsers !== _$unforgetCache[17].v) {
    _unwrappedJsxExp2 = setFilterUsers ? "Show Odd" : "Show Even";
    _$unforgetCache[27].e(_unwrappedJsxExp2);
  }
  let _unwrappedJsxExp3 = _$unforgetCache[28].v;
  if (_$unforgetCache[28].n || handleUserClick !== _$unforgetCache[5].v || user !== _$unforgetCache[9].v) {
    _unwrappedJsxExp3 = () => handleUserClick(user.id);
    _$unforgetCache[28].e(_unwrappedJsxExp3);
  }
  let _unwrappedJsxEl3 = _$unforgetCache[29].v;
  if (_$unforgetCache[29].n || _unwrappedJsxExp !== _$unforgetCache[26].v) {
    _unwrappedJsxEl3 = <h1>Follwers of {_unwrappedJsxExp}</h1>;
    _$unforgetCache[29].e(_unwrappedJsxEl3);
  }
  let _unwrappedJsxEl5 = _$unforgetCache[30].v;
  if (_$unforgetCache[30].n || toggleEvenOnes !== _$unforgetCache[19].v || _unwrappedJsxExp2 !== _$unforgetCache[27].v) {
    _unwrappedJsxEl5 = <button onClick={toggleEvenOnes}>
        {_unwrappedJsxExp2}
      </button>;
    _$unforgetCache[30].e(_unwrappedJsxEl5);
  }
  let _unwrappedJsxEl6 = _$unforgetCache[31].v;
  if (_$unforgetCache[31].n || _unwrappedJsxExp3 !== _$unforgetCache[28].v || userListElement !== _$unforgetCache[25].v) {
    _unwrappedJsxEl6 = <ul onClick={_unwrappedJsxExp3}>{userListElement}</ul>;
    _$unforgetCache[31].e(_unwrappedJsxEl6);
  }
  let _unwrappedJsxEl7 = _$unforgetCache[32].v;
  if (_$unforgetCache[32].n || _unwrappedJsxEl3 !== _$unforgetCache[29].v || _unwrappedJsxEl4 !== _$unforgetCache[8].v || _unwrappedJsxEl5 !== _$unforgetCache[30].v || _unwrappedJsxEl6 !== _$unforgetCache[31].v) {
    _unwrappedJsxEl7 = <div>
      {_unwrappedJsxEl3}
      {_unwrappedJsxEl4}
      {_unwrappedJsxEl5}
      {_unwrappedJsxEl6}
    </div>;
    _$unforgetCache[32].e(_unwrappedJsxEl7);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl7;
}
function UserListItem(_props) {
  const [_$unforgetCache2, _$unforgetCommit2, _$unforgetNull2] = useCreateCache$unforget(
  /*
  0 => _props
  1 => _unwrappedJsxExp4
  2 => _unwrappedJsxExp5
  3 => login
  4 => avatar_url
  5 => html_url
  6 => _unwrappedJsxEl8
  7 => _unwrappedJsxEl9
  8 => _unwrappedJsxEl10
  */
  9);
  let _unwrappedJsxExp4 = _$unforgetCache2[1].v;
  if (_$unforgetCache2[1].n) {
    _unwrappedJsxExp4 = {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      gap: 10,
      marginBottom: 10
    };
    _$unforgetCache2[1].e(_unwrappedJsxExp4);
  }
  let _unwrappedJsxExp5 = _$unforgetCache2[2].v;
  if (_$unforgetCache2[2].n) {
    _unwrappedJsxExp5 = {
      width: 100,
      height: 100,
      borderRadius: 20
    };
    _$unforgetCache2[2].e(_unwrappedJsxExp5);
  }
  let login = _$unforgetCache2[3].v;
  if (_$unforgetCache2[3].n || _props !== _$unforgetCache2[0].v) {
    login = _props.user.login;
    _$unforgetCache2[3].e(login);
  }
  let avatar_url = _$unforgetCache2[4].v;
  if (_$unforgetCache2[4].n || _props !== _$unforgetCache2[0].v) {
    avatar_url = _props.user.avatar_url;
    _$unforgetCache2[4].e(avatar_url);
  }
  let html_url = _$unforgetCache2[5].v;
  if (_$unforgetCache2[5].n || _props !== _$unforgetCache2[0].v) {
    html_url = _props.user.html_url;
    _$unforgetCache2[5].e(html_url);
  }
  let _unwrappedJsxEl8 = _$unforgetCache2[6].v;
  if (_$unforgetCache2[6].n || _unwrappedJsxExp5 !== _$unforgetCache2[2].v || avatar_url !== _$unforgetCache2[4].v || login !== _$unforgetCache2[3].v) {
    _unwrappedJsxEl8 = <img style={_unwrappedJsxExp5} src={avatar_url} alt={login} />;
    _$unforgetCache2[6].e(_unwrappedJsxEl8);
  }
  let _unwrappedJsxEl9 = _$unforgetCache2[7].v;
  if (_$unforgetCache2[7].n || html_url !== _$unforgetCache2[5].v || login !== _$unforgetCache2[3].v) {
    _unwrappedJsxEl9 = <a href={html_url}>{login}</a>;
    _$unforgetCache2[7].e(_unwrappedJsxEl9);
  }
  let _unwrappedJsxEl10 = _$unforgetCache2[8].v;
  if (_$unforgetCache2[8].n || _unwrappedJsxExp4 !== _$unforgetCache2[1].v || _unwrappedJsxEl8 !== _$unforgetCache2[6].v || _unwrappedJsxEl9 !== _$unforgetCache2[7].v) {
    _unwrappedJsxEl10 = <li style={_unwrappedJsxExp4}>
      {_unwrappedJsxEl8}
      {_unwrappedJsxEl9}
    </li>;
    _$unforgetCache2[8].e(_unwrappedJsxEl10);
  }
  _$unforgetCommit2();
  return _unwrappedJsxEl10;
}
export default UserList;"
`;

exports[`Component fixtures applyModification fixture_11 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
export default function App() {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => a
  1 => b
  2 => _unwrappedJsxExp
  3 => _unwrappedJsxEl
  */
  4);
  let a = _$unforgetCache[0].v;
  if (_$unforgetCache[0].n) {
    a = [];
    _$unforgetCache[0].e(a);
  }
  if (a !== _$unforgetCache[0].v) {
    a.push(1);
  }
  let b = _$unforgetCache[1].v;
  if (_$unforgetCache[1].n || a !== _$unforgetCache[0].v) {
    b = a;
    _$unforgetCache[1].e(b);
  }
  if (b !== _$unforgetCache[1].v) {
    b.push(2);
  }
  let _unwrappedJsxExp = _$unforgetCache[2].v;
  if (_$unforgetCache[2].n || a !== _$unforgetCache[0].v) {
    _unwrappedJsxExp = a[1];
    _$unforgetCache[2].e(_unwrappedJsxExp);
  }
  let _unwrappedJsxEl = _$unforgetCache[3].v;
  if (_$unforgetCache[3].n || _unwrappedJsxExp !== _$unforgetCache[2].v) {
    _unwrappedJsxEl = <div>{_unwrappedJsxExp}</div>;
    _$unforgetCache[3].e(_unwrappedJsxEl);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl;
}"
`;

exports[`Component fixtures applyModification fixture_12 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
import { useState } from "react";
function Comp(_props) {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _props
  1 => a
  2 => b
  3 => x
  4 => y
  5 => _unwrappedJsxExp
  6 => _unwrappedJsxEl
  */
  7);
  let a = _$unforgetCache[1].v;
  if (_$unforgetCache[1].n || _props !== _$unforgetCache[0].v) {
    a = _props.a;
    _$unforgetCache[1].e(a);
  }
  let b = _$unforgetCache[2].v;
  if (_$unforgetCache[2].n || _props !== _$unforgetCache[0].v) {
    b = _props.b;
    _$unforgetCache[2].e(b);
  }
  let x = _$unforgetCache[3].v;
  if (_$unforgetCache[3].n || a !== _$unforgetCache[1].v || b !== _$unforgetCache[2].v) {
    x = [];
    _$unforgetCache[3].e(x);
  }
  if (x !== _$unforgetCache[3].v || a !== _$unforgetCache[1].v) {
    x.push(a);
  }
  let y = _$unforgetCache[4].v;
  if (_$unforgetCache[4].n || x !== _$unforgetCache[3].v || b !== _$unforgetCache[2].v) {
    y = x;
    _$unforgetCache[4].e(y);
  }
  if (y !== _$unforgetCache[4].v || b !== _$unforgetCache[2].v) {
    y.push(b);
  }
  let _unwrappedJsxExp = _$unforgetCache[5].v;
  if (_$unforgetCache[5].n || x !== _$unforgetCache[3].v) {
    _unwrappedJsxExp = x.join(",");
    _$unforgetCache[5].e(_unwrappedJsxExp);
  }
  let _unwrappedJsxEl = _$unforgetCache[6].v;
  if (_$unforgetCache[6].n || _unwrappedJsxExp !== _$unforgetCache[5].v) {
    _unwrappedJsxEl = <div>n: {_unwrappedJsxExp}</div>;
    _$unforgetCache[6].e(_unwrappedJsxEl);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl;
}
export default function App() {
  const [_$unforgetCache2, _$unforgetCommit2, _$unforgetNull2] = useCreateCache$unforget(
  /*
  0 => _unwrapped
  1 => state
  2 => setState
  3 => _unwrappedJsxExp2
  4 => _unwrappedJsxEl2
  5 => _unwrappedJsxEl3
  6 => _unwrappedJsxEl4
  */
  7);
  let _unwrapped = _$unforgetCache2[0].v;
  _unwrapped = useState(2);
  _$unforgetCache2[0].e(_unwrapped);
  let state = _$unforgetCache2[1].v;
  if (_$unforgetCache2[1].n || _unwrapped !== _$unforgetCache2[0].v) {
    state = _unwrapped[0];
    _$unforgetCache2[1].e(state);
  }
  let setState = _$unforgetCache2[2].v;
  if (_$unforgetCache2[2].n || _unwrapped !== _$unforgetCache2[0].v) {
    setState = _unwrapped[1];
    _$unforgetCache2[2].e(setState);
  }
  let _unwrappedJsxExp2 = _$unforgetCache2[3].v;
  if (_$unforgetCache2[3].n || setState !== _$unforgetCache2[2].v) {
    _unwrappedJsxExp2 = () => setState(p => p + 1);
    _$unforgetCache2[3].e(_unwrappedJsxExp2);
  }
  let _unwrappedJsxEl2 = _$unforgetCache2[4].v;
  if (_$unforgetCache2[4].n || state !== _$unforgetCache2[1].v) {
    _unwrappedJsxEl2 = <Comp a={3} b={state} />;
    _$unforgetCache2[4].e(_unwrappedJsxEl2);
  }
  let _unwrappedJsxEl3 = _$unforgetCache2[5].v;
  if (_$unforgetCache2[5].n || _unwrappedJsxExp2 !== _$unforgetCache2[3].v) {
    _unwrappedJsxEl3 = <button onClick={_unwrappedJsxExp2}>click</button>;
    _$unforgetCache2[5].e(_unwrappedJsxEl3);
  }
  let _unwrappedJsxEl4 = _$unforgetCache2[6].v;
  if (_$unforgetCache2[6].n || _unwrappedJsxEl2 !== _$unforgetCache2[4].v || _unwrappedJsxEl3 !== _$unforgetCache2[5].v) {
    _unwrappedJsxEl4 = <div>
      {_unwrappedJsxEl2}
      {_unwrappedJsxEl3}
    </div>;
    _$unforgetCache2[6].e(_unwrappedJsxEl4);
  }
  _$unforgetCommit2();
  return _unwrappedJsxEl4;
}"
`;

exports[`Component fixtures applyModification fixture_13 1`] = `
"import { useCreateCache$unforget } from "@react-unforget/runtime";
import { useState } from "react";
export default function CounterWithMutationTracking() {
  const [_$unforgetCache, _$unforgetCommit, _$unforgetNull] = useCreateCache$unforget(
  /*
  0 => _unwrapped
  1 => _unwrappedJsxEl2
  2 => state
  3 => setState
  4 => x
  5 => z
  6 => y
  7 => _unwrappedJsxExp
  8 => _unwrappedJsxExp2
  9 => _unwrappedJsxExp3
  10 => _unwrappedJsxExp4
  11 => _unwrappedJsxEl
  12 => _unwrappedJsxEl3
  13 => _unwrappedJsxEl4
  */
  14);
  let _unwrapped = _$unforgetCache[0].v;
  _unwrapped = useState(0);
  _$unforgetCache[0].e(_unwrapped);
  let _unwrappedJsxEl2 = _$unforgetCache[1].v;
  if (_$unforgetCache[1].n) {
    _unwrappedJsxEl2 = <br />;
    _$unforgetCache[1].e(_unwrappedJsxEl2);
  }
  let state = _$unforgetCache[2].v;
  if (_$unforgetCache[2].n || _unwrapped !== _$unforgetCache[0].v) {
    state = _unwrapped[0];
    _$unforgetCache[2].e(state);
  }
  let setState = _$unforgetCache[3].v;
  if (_$unforgetCache[3].n || _unwrapped !== _$unforgetCache[0].v) {
    setState = _unwrapped[1];
    _$unforgetCache[3].e(setState);
  }
  let x = _$unforgetCache[4].v;
  if (_$unforgetCache[4].n || state !== _$unforgetCache[2].v) {
    x = [];
    _$unforgetCache[4].e(x);
  }
  let z = _$unforgetCache[5].v;
  if (_$unforgetCache[5].n || state !== _$unforgetCache[2].v) {
    z = [];
    _$unforgetCache[5].e(z);
  }
  let y = _$unforgetCache[6].v;
  if (_$unforgetCache[6].n || state !== _$unforgetCache[2].v || x !== _$unforgetCache[4].v || z !== _$unforgetCache[5].v) {
    y = state % 2 === 0 ? x : z;
    _$unforgetCache[6].e(y);
  }
  if (y !== _$unforgetCache[6].v || state !== _$unforgetCache[2].v) {
    y.push(state);
  }
  let _unwrappedJsxExp = _$unforgetCache[7].v;
  if (_$unforgetCache[7].n || setState !== _$unforgetCache[3].v || state !== _$unforgetCache[2].v) {
    _unwrappedJsxExp = () => setState(state + 1);
    _$unforgetCache[7].e(_unwrappedJsxExp);
  }
  let _unwrappedJsxExp2 = _$unforgetCache[8].v;
  if (_$unforgetCache[8].n || y !== _$unforgetCache[6].v) {
    _unwrappedJsxExp2 = y[0];
    _$unforgetCache[8].e(_unwrappedJsxExp2);
  }
  let _unwrappedJsxExp3 = _$unforgetCache[9].v;
  if (_$unforgetCache[9].n || x !== _$unforgetCache[4].v) {
    _unwrappedJsxExp3 = JSON.stringify(x);
    _$unforgetCache[9].e(_unwrappedJsxExp3);
  }
  let _unwrappedJsxExp4 = _$unforgetCache[10].v;
  if (_$unforgetCache[10].n || y !== _$unforgetCache[6].v) {
    _unwrappedJsxExp4 = JSON.stringify(y);
    _$unforgetCache[10].e(_unwrappedJsxExp4);
  }
  let _unwrappedJsxEl = _$unforgetCache[11].v;
  if (_$unforgetCache[11].n || _unwrappedJsxExp !== _$unforgetCache[7].v) {
    _unwrappedJsxEl = <button onClick={_unwrappedJsxExp}>Increment</button>;
    _$unforgetCache[11].e(_unwrappedJsxEl);
  }
  let _unwrappedJsxEl3 = _$unforgetCache[12].v;
  if (_$unforgetCache[12].n || _unwrappedJsxExp3 !== _$unforgetCache[9].v || _unwrappedJsxEl2 !== _$unforgetCache[1].v || _unwrappedJsxExp4 !== _$unforgetCache[10].v) {
    _unwrappedJsxEl3 = <p data-testid="output-printer">
        x: {_unwrappedJsxExp3}
        {_unwrappedJsxEl2}
        y: {_unwrappedJsxExp4}
      </p>;
    _$unforgetCache[12].e(_unwrappedJsxEl3);
  }
  let _unwrappedJsxEl4 = _$unforgetCache[13].v;
  if (_$unforgetCache[13].n || _unwrappedJsxEl !== _$unforgetCache[11].v || _unwrappedJsxExp2 !== _$unforgetCache[8].v || _unwrappedJsxEl3 !== _$unforgetCache[12].v) {
    _unwrappedJsxEl4 = <div>
      {_unwrappedJsxEl}
      {_unwrappedJsxExp2}
      {_unwrappedJsxEl3}
    </div>;
    _$unforgetCache[13].e(_unwrappedJsxEl4);
  }
  _$unforgetCommit();
  return _unwrappedJsxEl4;
}"
`;
